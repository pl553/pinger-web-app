version: "3.9"
services:
  postgres:
    image: postgres:latest
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 25
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - ./.env
  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    depends_on:
      - backend
    network_mode: "host"
    env_file:
      - ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  frontend:
    build: ./frontend
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./nginx.conf.template:/nginx.conf.template:ro
    depends_on:
      - frontend
      - backend
    env_file:
      - ./.env
    command: /bin/sh -c "envsubst < /nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
  no-ping:
    build: ./test-containers/no-ping
    cap_add:
      - NET_ADMIN
  delayed-ping:
    build: ./test-containers/delayed-ping
    cap_add:
      - NET_ADMIN
  toggle-ping:
    build: ./test-containers/toggle-ping
    cap_add:
      - NET_ADMIN

volumes:
  db:
